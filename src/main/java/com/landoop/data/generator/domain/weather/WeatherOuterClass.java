package com.landoop.data.generator.domain.weather;// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: weather.proto

public final class WeatherOuterClass {
  private WeatherOuterClass() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface WindOrBuilder extends
      // @@protoc_insertion_point(interface_extends:Wind)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional int32 chill = 1;</code>
     */
    int getChill();

    /**
     * <code>optional int32 direction = 2;</code>
     */
    int getDirection();

    /**
     * <code>optional int32 speed = 3;</code>
     */
    int getSpeed();
  }
  /**
   * Protobuf type {@code Wind}
   */
  public  static final class Wind extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:Wind)
      WindOrBuilder {
    // Use Wind.newBuilder() to construct.
    private Wind(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Wind() {
      chill_ = 0;
      direction_ = 0;
      speed_ = 0;
    }

    @Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private Wind(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 8: {

              chill_ = input.readInt32();
              break;
            }
            case 16: {

              direction_ = input.readInt32();
              break;
            }
            case 24: {

              speed_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return WeatherOuterClass.internal_static_Wind_descriptor;
    }

    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return WeatherOuterClass.internal_static_Wind_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              Wind.class, Builder.class);
    }

    public static final int CHILL_FIELD_NUMBER = 1;
    private int chill_;
    /**
     * <code>optional int32 chill = 1;</code>
     */
    public int getChill() {
      return chill_;
    }

    public static final int DIRECTION_FIELD_NUMBER = 2;
    private int direction_;
    /**
     * <code>optional int32 direction = 2;</code>
     */
    public int getDirection() {
      return direction_;
    }

    public static final int SPEED_FIELD_NUMBER = 3;
    private int speed_;
    /**
     * <code>optional int32 speed = 3;</code>
     */
    public int getSpeed() {
      return speed_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (chill_ != 0) {
        output.writeInt32(1, chill_);
      }
      if (direction_ != 0) {
        output.writeInt32(2, direction_);
      }
      if (speed_ != 0) {
        output.writeInt32(3, speed_);
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (chill_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, chill_);
      }
      if (direction_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, direction_);
      }
      if (speed_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, speed_);
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @Override
    public boolean equals(final Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof Wind)) {
        return super.equals(obj);
      }
      Wind other = (Wind) obj;

      boolean result = true;
      result = result && (getChill()
          == other.getChill());
      result = result && (getDirection()
          == other.getDirection());
      result = result && (getSpeed()
          == other.getSpeed());
      return result;
    }

    @Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptorForType().hashCode();
      hash = (37 * hash) + CHILL_FIELD_NUMBER;
      hash = (53 * hash) + getChill();
      hash = (37 * hash) + DIRECTION_FIELD_NUMBER;
      hash = (53 * hash) + getDirection();
      hash = (37 * hash) + SPEED_FIELD_NUMBER;
      hash = (53 * hash) + getSpeed();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static Wind parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static Wind parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static Wind parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static Wind parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static Wind parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static Wind parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static Wind parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static Wind parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static Wind parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static Wind parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(Wind prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @Override
    protected Builder newBuilderForType(
        BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code Wind}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:Wind)
        WindOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return WeatherOuterClass.internal_static_Wind_descriptor;
      }

      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return WeatherOuterClass.internal_static_Wind_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                Wind.class, Builder.class);
      }

      // Construct using WeatherOuterClass.Wind.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        chill_ = 0;

        direction_ = 0;

        speed_ = 0;

        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return WeatherOuterClass.internal_static_Wind_descriptor;
      }

      public Wind getDefaultInstanceForType() {
        return Wind.getDefaultInstance();
      }

      public Wind build() {
        Wind result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public Wind buildPartial() {
        Wind result = new Wind(this);
        result.chill_ = chill_;
        result.direction_ = direction_;
        result.speed_ = speed_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof Wind) {
          return mergeFrom((Wind)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(Wind other) {
        if (other == Wind.getDefaultInstance()) return this;
        if (other.getChill() != 0) {
          setChill(other.getChill());
        }
        if (other.getDirection() != 0) {
          setDirection(other.getDirection());
        }
        if (other.getSpeed() != 0) {
          setSpeed(other.getSpeed());
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        Wind parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (Wind) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private int chill_ ;
      /**
       * <code>optional int32 chill = 1;</code>
       */
      public int getChill() {
        return chill_;
      }
      /**
       * <code>optional int32 chill = 1;</code>
       */
      public Builder setChill(int value) {
        
        chill_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 chill = 1;</code>
       */
      public Builder clearChill() {
        
        chill_ = 0;
        onChanged();
        return this;
      }

      private int direction_ ;
      /**
       * <code>optional int32 direction = 2;</code>
       */
      public int getDirection() {
        return direction_;
      }
      /**
       * <code>optional int32 direction = 2;</code>
       */
      public Builder setDirection(int value) {
        
        direction_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 direction = 2;</code>
       */
      public Builder clearDirection() {
        
        direction_ = 0;
        onChanged();
        return this;
      }

      private int speed_ ;
      /**
       * <code>optional int32 speed = 3;</code>
       */
      public int getSpeed() {
        return speed_;
      }
      /**
       * <code>optional int32 speed = 3;</code>
       */
      public Builder setSpeed(int value) {
        
        speed_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 speed = 3;</code>
       */
      public Builder clearSpeed() {
        
        speed_ = 0;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:Wind)
    }

    // @@protoc_insertion_point(class_scope:Wind)
    private static final Wind DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new Wind();
    }

    public static Wind getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Wind>
        PARSER = new com.google.protobuf.AbstractParser<Wind>() {
      public Wind parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new Wind(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<Wind> parser() {
      return PARSER;
    }

    @Override
    public com.google.protobuf.Parser<Wind> getParserForType() {
      return PARSER;
    }

    public Wind getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface AtmosphereOrBuilder extends
      // @@protoc_insertion_point(interface_extends:Atmosphere)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional int32 humidity = 1;</code>
     */
    int getHumidity();

    /**
     * <code>optional double pressure = 2;</code>
     */
    double getPressure();

    /**
     * <code>optional int32 rising = 3;</code>
     */
    int getRising();

    /**
     * <code>optional double visibility = 4;</code>
     */
    double getVisibility();
  }
  /**
   * Protobuf type {@code Atmosphere}
   */
  public  static final class Atmosphere extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:Atmosphere)
      AtmosphereOrBuilder {
    // Use Atmosphere.newBuilder() to construct.
    private Atmosphere(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Atmosphere() {
      humidity_ = 0;
      pressure_ = 0D;
      rising_ = 0;
      visibility_ = 0D;
    }

    @Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private Atmosphere(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 8: {

              humidity_ = input.readInt32();
              break;
            }
            case 17: {

              pressure_ = input.readDouble();
              break;
            }
            case 24: {

              rising_ = input.readInt32();
              break;
            }
            case 33: {

              visibility_ = input.readDouble();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return WeatherOuterClass.internal_static_Atmosphere_descriptor;
    }

    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return WeatherOuterClass.internal_static_Atmosphere_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              Atmosphere.class, Builder.class);
    }

    public static final int HUMIDITY_FIELD_NUMBER = 1;
    private int humidity_;
    /**
     * <code>optional int32 humidity = 1;</code>
     */
    public int getHumidity() {
      return humidity_;
    }

    public static final int PRESSURE_FIELD_NUMBER = 2;
    private double pressure_;
    /**
     * <code>optional double pressure = 2;</code>
     */
    public double getPressure() {
      return pressure_;
    }

    public static final int RISING_FIELD_NUMBER = 3;
    private int rising_;
    /**
     * <code>optional int32 rising = 3;</code>
     */
    public int getRising() {
      return rising_;
    }

    public static final int VISIBILITY_FIELD_NUMBER = 4;
    private double visibility_;
    /**
     * <code>optional double visibility = 4;</code>
     */
    public double getVisibility() {
      return visibility_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (humidity_ != 0) {
        output.writeInt32(1, humidity_);
      }
      if (pressure_ != 0D) {
        output.writeDouble(2, pressure_);
      }
      if (rising_ != 0) {
        output.writeInt32(3, rising_);
      }
      if (visibility_ != 0D) {
        output.writeDouble(4, visibility_);
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (humidity_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, humidity_);
      }
      if (pressure_ != 0D) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(2, pressure_);
      }
      if (rising_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, rising_);
      }
      if (visibility_ != 0D) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(4, visibility_);
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @Override
    public boolean equals(final Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof Atmosphere)) {
        return super.equals(obj);
      }
      Atmosphere other = (Atmosphere) obj;

      boolean result = true;
      result = result && (getHumidity()
          == other.getHumidity());
      result = result && (
          Double.doubleToLongBits(getPressure())
          == Double.doubleToLongBits(
              other.getPressure()));
      result = result && (getRising()
          == other.getRising());
      result = result && (
          Double.doubleToLongBits(getVisibility())
          == Double.doubleToLongBits(
              other.getVisibility()));
      return result;
    }

    @Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptorForType().hashCode();
      hash = (37 * hash) + HUMIDITY_FIELD_NUMBER;
      hash = (53 * hash) + getHumidity();
      hash = (37 * hash) + PRESSURE_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          Double.doubleToLongBits(getPressure()));
      hash = (37 * hash) + RISING_FIELD_NUMBER;
      hash = (53 * hash) + getRising();
      hash = (37 * hash) + VISIBILITY_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          Double.doubleToLongBits(getVisibility()));
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static Atmosphere parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static Atmosphere parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static Atmosphere parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static Atmosphere parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static Atmosphere parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static Atmosphere parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static Atmosphere parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static Atmosphere parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static Atmosphere parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static Atmosphere parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(Atmosphere prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @Override
    protected Builder newBuilderForType(
        BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code Atmosphere}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:Atmosphere)
        AtmosphereOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return WeatherOuterClass.internal_static_Atmosphere_descriptor;
      }

      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return WeatherOuterClass.internal_static_Atmosphere_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                Atmosphere.class, Builder.class);
      }

      // Construct using WeatherOuterClass.Atmosphere.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        humidity_ = 0;

        pressure_ = 0D;

        rising_ = 0;

        visibility_ = 0D;

        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return WeatherOuterClass.internal_static_Atmosphere_descriptor;
      }

      public Atmosphere getDefaultInstanceForType() {
        return Atmosphere.getDefaultInstance();
      }

      public Atmosphere build() {
        Atmosphere result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public Atmosphere buildPartial() {
        Atmosphere result = new Atmosphere(this);
        result.humidity_ = humidity_;
        result.pressure_ = pressure_;
        result.rising_ = rising_;
        result.visibility_ = visibility_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof Atmosphere) {
          return mergeFrom((Atmosphere)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(Atmosphere other) {
        if (other == Atmosphere.getDefaultInstance()) return this;
        if (other.getHumidity() != 0) {
          setHumidity(other.getHumidity());
        }
        if (other.getPressure() != 0D) {
          setPressure(other.getPressure());
        }
        if (other.getRising() != 0) {
          setRising(other.getRising());
        }
        if (other.getVisibility() != 0D) {
          setVisibility(other.getVisibility());
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        Atmosphere parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (Atmosphere) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private int humidity_ ;
      /**
       * <code>optional int32 humidity = 1;</code>
       */
      public int getHumidity() {
        return humidity_;
      }
      /**
       * <code>optional int32 humidity = 1;</code>
       */
      public Builder setHumidity(int value) {
        
        humidity_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 humidity = 1;</code>
       */
      public Builder clearHumidity() {
        
        humidity_ = 0;
        onChanged();
        return this;
      }

      private double pressure_ ;
      /**
       * <code>optional double pressure = 2;</code>
       */
      public double getPressure() {
        return pressure_;
      }
      /**
       * <code>optional double pressure = 2;</code>
       */
      public Builder setPressure(double value) {
        
        pressure_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional double pressure = 2;</code>
       */
      public Builder clearPressure() {
        
        pressure_ = 0D;
        onChanged();
        return this;
      }

      private int rising_ ;
      /**
       * <code>optional int32 rising = 3;</code>
       */
      public int getRising() {
        return rising_;
      }
      /**
       * <code>optional int32 rising = 3;</code>
       */
      public Builder setRising(int value) {
        
        rising_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 rising = 3;</code>
       */
      public Builder clearRising() {
        
        rising_ = 0;
        onChanged();
        return this;
      }

      private double visibility_ ;
      /**
       * <code>optional double visibility = 4;</code>
       */
      public double getVisibility() {
        return visibility_;
      }
      /**
       * <code>optional double visibility = 4;</code>
       */
      public Builder setVisibility(double value) {
        
        visibility_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional double visibility = 4;</code>
       */
      public Builder clearVisibility() {
        
        visibility_ = 0D;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:Atmosphere)
    }

    // @@protoc_insertion_point(class_scope:Atmosphere)
    private static final Atmosphere DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new Atmosphere();
    }

    public static Atmosphere getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Atmosphere>
        PARSER = new com.google.protobuf.AbstractParser<Atmosphere>() {
      public Atmosphere parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new Atmosphere(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<Atmosphere> parser() {
      return PARSER;
    }

    @Override
    public com.google.protobuf.Parser<Atmosphere> getParserForType() {
      return PARSER;
    }

    public Atmosphere getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface ForecastOrBuilder extends
      // @@protoc_insertion_point(interface_extends:Forecast)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional string date = 1;</code>
     */
    String getDate();
    /**
     * <code>optional string date = 1;</code>
     */
    com.google.protobuf.ByteString
        getDateBytes();

    /**
     * <code>optional string day = 2;</code>
     */
    String getDay();
    /**
     * <code>optional string day = 2;</code>
     */
    com.google.protobuf.ByteString
        getDayBytes();

    /**
     * <code>optional int32 high = 3;</code>
     */
    int getHigh();

    /**
     * <code>optional int32 low = 4;</code>
     */
    int getLow();

    /**
     * <code>optional string text = 5;</code>
     */
    String getText();
    /**
     * <code>optional string text = 5;</code>
     */
    com.google.protobuf.ByteString
        getTextBytes();
  }
  /**
   * Protobuf type {@code Forecast}
   */
  public  static final class Forecast extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:Forecast)
      ForecastOrBuilder {
    // Use Forecast.newBuilder() to construct.
    private Forecast(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Forecast() {
      date_ = "";
      day_ = "";
      high_ = 0;
      low_ = 0;
      text_ = "";
    }

    @Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private Forecast(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              String s = input.readStringRequireUtf8();

              date_ = s;
              break;
            }
            case 18: {
              String s = input.readStringRequireUtf8();

              day_ = s;
              break;
            }
            case 24: {

              high_ = input.readInt32();
              break;
            }
            case 32: {

              low_ = input.readInt32();
              break;
            }
            case 42: {
              String s = input.readStringRequireUtf8();

              text_ = s;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return WeatherOuterClass.internal_static_Forecast_descriptor;
    }

    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return WeatherOuterClass.internal_static_Forecast_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              Forecast.class, Builder.class);
    }

    public static final int DATE_FIELD_NUMBER = 1;
    private volatile Object date_;
    /**
     * <code>optional string date = 1;</code>
     */
    public String getDate() {
      Object ref = date_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        date_ = s;
        return s;
      }
    }
    /**
     * <code>optional string date = 1;</code>
     */
    public com.google.protobuf.ByteString
        getDateBytes() {
      Object ref = date_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        date_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int DAY_FIELD_NUMBER = 2;
    private volatile Object day_;
    /**
     * <code>optional string day = 2;</code>
     */
    public String getDay() {
      Object ref = day_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        day_ = s;
        return s;
      }
    }
    /**
     * <code>optional string day = 2;</code>
     */
    public com.google.protobuf.ByteString
        getDayBytes() {
      Object ref = day_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        day_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int HIGH_FIELD_NUMBER = 3;
    private int high_;
    /**
     * <code>optional int32 high = 3;</code>
     */
    public int getHigh() {
      return high_;
    }

    public static final int LOW_FIELD_NUMBER = 4;
    private int low_;
    /**
     * <code>optional int32 low = 4;</code>
     */
    public int getLow() {
      return low_;
    }

    public static final int TEXT_FIELD_NUMBER = 5;
    private volatile Object text_;
    /**
     * <code>optional string text = 5;</code>
     */
    public String getText() {
      Object ref = text_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        text_ = s;
        return s;
      }
    }
    /**
     * <code>optional string text = 5;</code>
     */
    public com.google.protobuf.ByteString
        getTextBytes() {
      Object ref = text_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        text_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!getDateBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, date_);
      }
      if (!getDayBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, day_);
      }
      if (high_ != 0) {
        output.writeInt32(3, high_);
      }
      if (low_ != 0) {
        output.writeInt32(4, low_);
      }
      if (!getTextBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 5, text_);
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!getDateBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, date_);
      }
      if (!getDayBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, day_);
      }
      if (high_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, high_);
      }
      if (low_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, low_);
      }
      if (!getTextBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(5, text_);
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @Override
    public boolean equals(final Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof Forecast)) {
        return super.equals(obj);
      }
      Forecast other = (Forecast) obj;

      boolean result = true;
      result = result && getDate()
          .equals(other.getDate());
      result = result && getDay()
          .equals(other.getDay());
      result = result && (getHigh()
          == other.getHigh());
      result = result && (getLow()
          == other.getLow());
      result = result && getText()
          .equals(other.getText());
      return result;
    }

    @Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptorForType().hashCode();
      hash = (37 * hash) + DATE_FIELD_NUMBER;
      hash = (53 * hash) + getDate().hashCode();
      hash = (37 * hash) + DAY_FIELD_NUMBER;
      hash = (53 * hash) + getDay().hashCode();
      hash = (37 * hash) + HIGH_FIELD_NUMBER;
      hash = (53 * hash) + getHigh();
      hash = (37 * hash) + LOW_FIELD_NUMBER;
      hash = (53 * hash) + getLow();
      hash = (37 * hash) + TEXT_FIELD_NUMBER;
      hash = (53 * hash) + getText().hashCode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static Forecast parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static Forecast parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static Forecast parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static Forecast parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static Forecast parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static Forecast parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static Forecast parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static Forecast parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static Forecast parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static Forecast parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(Forecast prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @Override
    protected Builder newBuilderForType(
        BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code Forecast}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:Forecast)
        ForecastOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return WeatherOuterClass.internal_static_Forecast_descriptor;
      }

      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return WeatherOuterClass.internal_static_Forecast_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                Forecast.class, Builder.class);
      }

      // Construct using WeatherOuterClass.Forecast.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        date_ = "";

        day_ = "";

        high_ = 0;

        low_ = 0;

        text_ = "";

        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return WeatherOuterClass.internal_static_Forecast_descriptor;
      }

      public Forecast getDefaultInstanceForType() {
        return Forecast.getDefaultInstance();
      }

      public Forecast build() {
        Forecast result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public Forecast buildPartial() {
        Forecast result = new Forecast(this);
        result.date_ = date_;
        result.day_ = day_;
        result.high_ = high_;
        result.low_ = low_;
        result.text_ = text_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof Forecast) {
          return mergeFrom((Forecast)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(Forecast other) {
        if (other == Forecast.getDefaultInstance()) return this;
        if (!other.getDate().isEmpty()) {
          date_ = other.date_;
          onChanged();
        }
        if (!other.getDay().isEmpty()) {
          day_ = other.day_;
          onChanged();
        }
        if (other.getHigh() != 0) {
          setHigh(other.getHigh());
        }
        if (other.getLow() != 0) {
          setLow(other.getLow());
        }
        if (!other.getText().isEmpty()) {
          text_ = other.text_;
          onChanged();
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        Forecast parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (Forecast) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private Object date_ = "";
      /**
       * <code>optional string date = 1;</code>
       */
      public String getDate() {
        Object ref = date_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          date_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <code>optional string date = 1;</code>
       */
      public com.google.protobuf.ByteString
          getDateBytes() {
        Object ref = date_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          date_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string date = 1;</code>
       */
      public Builder setDate(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        date_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string date = 1;</code>
       */
      public Builder clearDate() {
        
        date_ = getDefaultInstance().getDate();
        onChanged();
        return this;
      }
      /**
       * <code>optional string date = 1;</code>
       */
      public Builder setDateBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        date_ = value;
        onChanged();
        return this;
      }

      private Object day_ = "";
      /**
       * <code>optional string day = 2;</code>
       */
      public String getDay() {
        Object ref = day_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          day_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <code>optional string day = 2;</code>
       */
      public com.google.protobuf.ByteString
          getDayBytes() {
        Object ref = day_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          day_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string day = 2;</code>
       */
      public Builder setDay(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        day_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string day = 2;</code>
       */
      public Builder clearDay() {
        
        day_ = getDefaultInstance().getDay();
        onChanged();
        return this;
      }
      /**
       * <code>optional string day = 2;</code>
       */
      public Builder setDayBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        day_ = value;
        onChanged();
        return this;
      }

      private int high_ ;
      /**
       * <code>optional int32 high = 3;</code>
       */
      public int getHigh() {
        return high_;
      }
      /**
       * <code>optional int32 high = 3;</code>
       */
      public Builder setHigh(int value) {
        
        high_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 high = 3;</code>
       */
      public Builder clearHigh() {
        
        high_ = 0;
        onChanged();
        return this;
      }

      private int low_ ;
      /**
       * <code>optional int32 low = 4;</code>
       */
      public int getLow() {
        return low_;
      }
      /**
       * <code>optional int32 low = 4;</code>
       */
      public Builder setLow(int value) {
        
        low_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 low = 4;</code>
       */
      public Builder clearLow() {
        
        low_ = 0;
        onChanged();
        return this;
      }

      private Object text_ = "";
      /**
       * <code>optional string text = 5;</code>
       */
      public String getText() {
        Object ref = text_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          text_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <code>optional string text = 5;</code>
       */
      public com.google.protobuf.ByteString
          getTextBytes() {
        Object ref = text_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          text_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string text = 5;</code>
       */
      public Builder setText(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        text_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string text = 5;</code>
       */
      public Builder clearText() {
        
        text_ = getDefaultInstance().getText();
        onChanged();
        return this;
      }
      /**
       * <code>optional string text = 5;</code>
       */
      public Builder setTextBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        text_ = value;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:Forecast)
    }

    // @@protoc_insertion_point(class_scope:Forecast)
    private static final Forecast DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new Forecast();
    }

    public static Forecast getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Forecast>
        PARSER = new com.google.protobuf.AbstractParser<Forecast>() {
      public Forecast parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new Forecast(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<Forecast> parser() {
      return PARSER;
    }

    @Override
    public com.google.protobuf.Parser<Forecast> getParserForType() {
      return PARSER;
    }

    public Forecast getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface WeatherOrBuilder extends
      // @@protoc_insertion_point(interface_extends:Weather)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional .Wind wind = 1;</code>
     */
    boolean hasWind();
    /**
     * <code>optional .Wind wind = 1;</code>
     */
    Wind getWind();
    /**
     * <code>optional .Wind wind = 1;</code>
     */
    WindOrBuilder getWindOrBuilder();

    /**
     * <code>optional .Atmosphere atmosphere = 2;</code>
     */
    boolean hasAtmosphere();
    /**
     * <code>optional .Atmosphere atmosphere = 2;</code>
     */
    Atmosphere getAtmosphere();
    /**
     * <code>optional .Atmosphere atmosphere = 2;</code>
     */
    AtmosphereOrBuilder getAtmosphereOrBuilder();

    /**
     * <code>repeated .Forecast forecast = 3;</code>
     */
    java.util.List<Forecast>
        getForecastList();
    /**
     * <code>repeated .Forecast forecast = 3;</code>
     */
    Forecast getForecast(int index);
    /**
     * <code>repeated .Forecast forecast = 3;</code>
     */
    int getForecastCount();
    /**
     * <code>repeated .Forecast forecast = 3;</code>
     */
    java.util.List<? extends ForecastOrBuilder>
        getForecastOrBuilderList();
    /**
     * <code>repeated .Forecast forecast = 3;</code>
     */
    ForecastOrBuilder getForecastOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code Weather}
   */
  public  static final class Weather extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:Weather)
      WeatherOrBuilder {
    // Use Weather.newBuilder() to construct.
    private Weather(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Weather() {
      forecast_ = java.util.Collections.emptyList();
    }

    @Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private Weather(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              Wind.Builder subBuilder = null;
              if (wind_ != null) {
                subBuilder = wind_.toBuilder();
              }
              wind_ = input.readMessage(Wind.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(wind_);
                wind_ = subBuilder.buildPartial();
              }

              break;
            }
            case 18: {
              Atmosphere.Builder subBuilder = null;
              if (atmosphere_ != null) {
                subBuilder = atmosphere_.toBuilder();
              }
              atmosphere_ = input.readMessage(Atmosphere.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(atmosphere_);
                atmosphere_ = subBuilder.buildPartial();
              }

              break;
            }
            case 26: {
              if (!((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
                forecast_ = new java.util.ArrayList<Forecast>();
                mutable_bitField0_ |= 0x00000004;
              }
              forecast_.add(
                  input.readMessage(Forecast.parser(), extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
          forecast_ = java.util.Collections.unmodifiableList(forecast_);
        }
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return WeatherOuterClass.internal_static_Weather_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return WeatherOuterClass.internal_static_Weather_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              Weather.class, Builder.class);
    }

    private int bitField0_;
    public static final int WIND_FIELD_NUMBER = 1;
    private Wind wind_;
    /**
     * <code>optional .Wind wind = 1;</code>
     */
    public boolean hasWind() {
      return wind_ != null;
    }
    /**
     * <code>optional .Wind wind = 1;</code>
     */
    public Wind getWind() {
      return wind_ == null ? Wind.getDefaultInstance() : wind_;
    }
    /**
     * <code>optional .Wind wind = 1;</code>
     */
    public WindOrBuilder getWindOrBuilder() {
      return getWind();
    }

    public static final int ATMOSPHERE_FIELD_NUMBER = 2;
    private Atmosphere atmosphere_;
    /**
     * <code>optional .Atmosphere atmosphere = 2;</code>
     */
    public boolean hasAtmosphere() {
      return atmosphere_ != null;
    }
    /**
     * <code>optional .Atmosphere atmosphere = 2;</code>
     */
    public Atmosphere getAtmosphere() {
      return atmosphere_ == null ? Atmosphere.getDefaultInstance() : atmosphere_;
    }
    /**
     * <code>optional .Atmosphere atmosphere = 2;</code>
     */
    public AtmosphereOrBuilder getAtmosphereOrBuilder() {
      return getAtmosphere();
    }

    public static final int FORECAST_FIELD_NUMBER = 3;
    private java.util.List<Forecast> forecast_;
    /**
     * <code>repeated .Forecast forecast = 3;</code>
     */
    public java.util.List<Forecast> getForecastList() {
      return forecast_;
    }
    /**
     * <code>repeated .Forecast forecast = 3;</code>
     */
    public java.util.List<? extends ForecastOrBuilder>
        getForecastOrBuilderList() {
      return forecast_;
    }
    /**
     * <code>repeated .Forecast forecast = 3;</code>
     */
    public int getForecastCount() {
      return forecast_.size();
    }
    /**
     * <code>repeated .Forecast forecast = 3;</code>
     */
    public Forecast getForecast(int index) {
      return forecast_.get(index);
    }
    /**
     * <code>repeated .Forecast forecast = 3;</code>
     */
    public ForecastOrBuilder getForecastOrBuilder(
        int index) {
      return forecast_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (wind_ != null) {
        output.writeMessage(1, getWind());
      }
      if (atmosphere_ != null) {
        output.writeMessage(2, getAtmosphere());
      }
      for (int i = 0; i < forecast_.size(); i++) {
        output.writeMessage(3, forecast_.get(i));
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (wind_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getWind());
      }
      if (atmosphere_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getAtmosphere());
      }
      for (int i = 0; i < forecast_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, forecast_.get(i));
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @Override
    public boolean equals(final Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof Weather)) {
        return super.equals(obj);
      }
      Weather other = (Weather) obj;

      boolean result = true;
      result = result && (hasWind() == other.hasWind());
      if (hasWind()) {
        result = result && getWind()
            .equals(other.getWind());
      }
      result = result && (hasAtmosphere() == other.hasAtmosphere());
      if (hasAtmosphere()) {
        result = result && getAtmosphere()
            .equals(other.getAtmosphere());
      }
      result = result && getForecastList()
          .equals(other.getForecastList());
      return result;
    }

    @Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptorForType().hashCode();
      if (hasWind()) {
        hash = (37 * hash) + WIND_FIELD_NUMBER;
        hash = (53 * hash) + getWind().hashCode();
      }
      if (hasAtmosphere()) {
        hash = (37 * hash) + ATMOSPHERE_FIELD_NUMBER;
        hash = (53 * hash) + getAtmosphere().hashCode();
      }
      if (getForecastCount() > 0) {
        hash = (37 * hash) + FORECAST_FIELD_NUMBER;
        hash = (53 * hash) + getForecastList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static Weather parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static Weather parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static Weather parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static Weather parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static Weather parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static Weather parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static Weather parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static Weather parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static Weather parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static Weather parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(Weather prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @Override
    protected Builder newBuilderForType(com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code Weather}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:Weather)
        WeatherOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return WeatherOuterClass.internal_static_Weather_descriptor;
      }

      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return WeatherOuterClass.internal_static_Weather_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                Weather.class, Builder.class);
      }

      // Construct using WeatherOuterClass.Weather.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getForecastFieldBuilder();
        }
      }
      public Builder clear() {
        super.clear();
        if (windBuilder_ == null) {
          wind_ = null;
        } else {
          wind_ = null;
          windBuilder_ = null;
        }
        if (atmosphereBuilder_ == null) {
          atmosphere_ = null;
        } else {
          atmosphere_ = null;
          atmosphereBuilder_ = null;
        }
        if (forecastBuilder_ == null) {
          forecast_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
        } else {
          forecastBuilder_.clear();
        }
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return WeatherOuterClass.internal_static_Weather_descriptor;
      }

      public Weather getDefaultInstanceForType() {
        return Weather.getDefaultInstance();
      }

      public Weather build() {
        Weather result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public Weather buildPartial() {
        Weather result = new Weather(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (windBuilder_ == null) {
          result.wind_ = wind_;
        } else {
          result.wind_ = windBuilder_.build();
        }
        if (atmosphereBuilder_ == null) {
          result.atmosphere_ = atmosphere_;
        } else {
          result.atmosphere_ = atmosphereBuilder_.build();
        }
        if (forecastBuilder_ == null) {
          if (((bitField0_ & 0x00000004) == 0x00000004)) {
            forecast_ = java.util.Collections.unmodifiableList(forecast_);
            bitField0_ = (bitField0_ & ~0x00000004);
          }
          result.forecast_ = forecast_;
        } else {
          result.forecast_ = forecastBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof Weather) {
          return mergeFrom((Weather)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(Weather other) {
        if (other == Weather.getDefaultInstance()) return this;
        if (other.hasWind()) {
          mergeWind(other.getWind());
        }
        if (other.hasAtmosphere()) {
          mergeAtmosphere(other.getAtmosphere());
        }
        if (forecastBuilder_ == null) {
          if (!other.forecast_.isEmpty()) {
            if (forecast_.isEmpty()) {
              forecast_ = other.forecast_;
              bitField0_ = (bitField0_ & ~0x00000004);
            } else {
              ensureForecastIsMutable();
              forecast_.addAll(other.forecast_);
            }
            onChanged();
          }
        } else {
          if (!other.forecast_.isEmpty()) {
            if (forecastBuilder_.isEmpty()) {
              forecastBuilder_.dispose();
              forecastBuilder_ = null;
              forecast_ = other.forecast_;
              bitField0_ = (bitField0_ & ~0x00000004);
              forecastBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getForecastFieldBuilder() : null;
            } else {
              forecastBuilder_.addAllMessages(other.forecast_);
            }
          }
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        Weather parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (Weather) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private Wind wind_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          Wind, Wind.Builder, WindOrBuilder> windBuilder_;
      /**
       * <code>optional .Wind wind = 1;</code>
       */
      public boolean hasWind() {
        return windBuilder_ != null || wind_ != null;
      }
      /**
       * <code>optional .Wind wind = 1;</code>
       */
      public Wind getWind() {
        if (windBuilder_ == null) {
          return wind_ == null ? Wind.getDefaultInstance() : wind_;
        } else {
          return windBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .Wind wind = 1;</code>
       */
      public Builder setWind(Wind value) {
        if (windBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          wind_ = value;
          onChanged();
        } else {
          windBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>optional .Wind wind = 1;</code>
       */
      public Builder setWind(
          Wind.Builder builderForValue) {
        if (windBuilder_ == null) {
          wind_ = builderForValue.build();
          onChanged();
        } else {
          windBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>optional .Wind wind = 1;</code>
       */
      public Builder mergeWind(Wind value) {
        if (windBuilder_ == null) {
          if (wind_ != null) {
            wind_ =
              Wind.newBuilder(wind_).mergeFrom(value).buildPartial();
          } else {
            wind_ = value;
          }
          onChanged();
        } else {
          windBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>optional .Wind wind = 1;</code>
       */
      public Builder clearWind() {
        if (windBuilder_ == null) {
          wind_ = null;
          onChanged();
        } else {
          wind_ = null;
          windBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>optional .Wind wind = 1;</code>
       */
      public Wind.Builder getWindBuilder() {
        
        onChanged();
        return getWindFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .Wind wind = 1;</code>
       */
      public WindOrBuilder getWindOrBuilder() {
        if (windBuilder_ != null) {
          return windBuilder_.getMessageOrBuilder();
        } else {
          return wind_ == null ?
              Wind.getDefaultInstance() : wind_;
        }
      }
      /**
       * <code>optional .Wind wind = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          Wind, Wind.Builder, WindOrBuilder>
          getWindFieldBuilder() {
        if (windBuilder_ == null) {
          windBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              Wind, Wind.Builder, WindOrBuilder>(
                  getWind(),
                  getParentForChildren(),
                  isClean());
          wind_ = null;
        }
        return windBuilder_;
      }

      private Atmosphere atmosphere_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          Atmosphere, Atmosphere.Builder, AtmosphereOrBuilder> atmosphereBuilder_;
      /**
       * <code>optional .Atmosphere atmosphere = 2;</code>
       */
      public boolean hasAtmosphere() {
        return atmosphereBuilder_ != null || atmosphere_ != null;
      }
      /**
       * <code>optional .Atmosphere atmosphere = 2;</code>
       */
      public Atmosphere getAtmosphere() {
        if (atmosphereBuilder_ == null) {
          return atmosphere_ == null ? Atmosphere.getDefaultInstance() : atmosphere_;
        } else {
          return atmosphereBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .Atmosphere atmosphere = 2;</code>
       */
      public Builder setAtmosphere(Atmosphere value) {
        if (atmosphereBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          atmosphere_ = value;
          onChanged();
        } else {
          atmosphereBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>optional .Atmosphere atmosphere = 2;</code>
       */
      public Builder setAtmosphere(
          Atmosphere.Builder builderForValue) {
        if (atmosphereBuilder_ == null) {
          atmosphere_ = builderForValue.build();
          onChanged();
        } else {
          atmosphereBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>optional .Atmosphere atmosphere = 2;</code>
       */
      public Builder mergeAtmosphere(Atmosphere value) {
        if (atmosphereBuilder_ == null) {
          if (atmosphere_ != null) {
            atmosphere_ =
              Atmosphere.newBuilder(atmosphere_).mergeFrom(value).buildPartial();
          } else {
            atmosphere_ = value;
          }
          onChanged();
        } else {
          atmosphereBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>optional .Atmosphere atmosphere = 2;</code>
       */
      public Builder clearAtmosphere() {
        if (atmosphereBuilder_ == null) {
          atmosphere_ = null;
          onChanged();
        } else {
          atmosphere_ = null;
          atmosphereBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>optional .Atmosphere atmosphere = 2;</code>
       */
      public Atmosphere.Builder getAtmosphereBuilder() {
        
        onChanged();
        return getAtmosphereFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .Atmosphere atmosphere = 2;</code>
       */
      public AtmosphereOrBuilder getAtmosphereOrBuilder() {
        if (atmosphereBuilder_ != null) {
          return atmosphereBuilder_.getMessageOrBuilder();
        } else {
          return atmosphere_ == null ?
              Atmosphere.getDefaultInstance() : atmosphere_;
        }
      }
      /**
       * <code>optional .Atmosphere atmosphere = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          Atmosphere, Atmosphere.Builder, AtmosphereOrBuilder>
          getAtmosphereFieldBuilder() {
        if (atmosphereBuilder_ == null) {
          atmosphereBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              Atmosphere, Atmosphere.Builder, AtmosphereOrBuilder>(
                  getAtmosphere(),
                  getParentForChildren(),
                  isClean());
          atmosphere_ = null;
        }
        return atmosphereBuilder_;
      }

      private java.util.List<Forecast> forecast_ =
        java.util.Collections.emptyList();
      private void ensureForecastIsMutable() {
        if (!((bitField0_ & 0x00000004) == 0x00000004)) {
          forecast_ = new java.util.ArrayList<Forecast>(forecast_);
          bitField0_ |= 0x00000004;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          Forecast, Forecast.Builder, ForecastOrBuilder> forecastBuilder_;

      /**
       * <code>repeated .Forecast forecast = 3;</code>
       */
      public java.util.List<Forecast> getForecastList() {
        if (forecastBuilder_ == null) {
          return java.util.Collections.unmodifiableList(forecast_);
        } else {
          return forecastBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .Forecast forecast = 3;</code>
       */
      public int getForecastCount() {
        if (forecastBuilder_ == null) {
          return forecast_.size();
        } else {
          return forecastBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .Forecast forecast = 3;</code>
       */
      public Forecast getForecast(int index) {
        if (forecastBuilder_ == null) {
          return forecast_.get(index);
        } else {
          return forecastBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .Forecast forecast = 3;</code>
       */
      public Builder setForecast(
          int index, Forecast value) {
        if (forecastBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureForecastIsMutable();
          forecast_.set(index, value);
          onChanged();
        } else {
          forecastBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .Forecast forecast = 3;</code>
       */
      public Builder setForecast(
          int index, Forecast.Builder builderForValue) {
        if (forecastBuilder_ == null) {
          ensureForecastIsMutable();
          forecast_.set(index, builderForValue.build());
          onChanged();
        } else {
          forecastBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .Forecast forecast = 3;</code>
       */
      public Builder addForecast(Forecast value) {
        if (forecastBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureForecastIsMutable();
          forecast_.add(value);
          onChanged();
        } else {
          forecastBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .Forecast forecast = 3;</code>
       */
      public Builder addForecast(
          int index, Forecast value) {
        if (forecastBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureForecastIsMutable();
          forecast_.add(index, value);
          onChanged();
        } else {
          forecastBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .Forecast forecast = 3;</code>
       */
      public Builder addForecast(
          Forecast.Builder builderForValue) {
        if (forecastBuilder_ == null) {
          ensureForecastIsMutable();
          forecast_.add(builderForValue.build());
          onChanged();
        } else {
          forecastBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .Forecast forecast = 3;</code>
       */
      public Builder addForecast(
          int index, Forecast.Builder builderForValue) {
        if (forecastBuilder_ == null) {
          ensureForecastIsMutable();
          forecast_.add(index, builderForValue.build());
          onChanged();
        } else {
          forecastBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .Forecast forecast = 3;</code>
       */
      public Builder addAllForecast(
          Iterable<? extends Forecast> values) {
        if (forecastBuilder_ == null) {
          ensureForecastIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, forecast_);
          onChanged();
        } else {
          forecastBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .Forecast forecast = 3;</code>
       */
      public Builder clearForecast() {
        if (forecastBuilder_ == null) {
          forecast_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
          onChanged();
        } else {
          forecastBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .Forecast forecast = 3;</code>
       */
      public Builder removeForecast(int index) {
        if (forecastBuilder_ == null) {
          ensureForecastIsMutable();
          forecast_.remove(index);
          onChanged();
        } else {
          forecastBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .Forecast forecast = 3;</code>
       */
      public Forecast.Builder getForecastBuilder(
          int index) {
        return getForecastFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .Forecast forecast = 3;</code>
       */
      public ForecastOrBuilder getForecastOrBuilder(
          int index) {
        if (forecastBuilder_ == null) {
          return forecast_.get(index);  } else {
          return forecastBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .Forecast forecast = 3;</code>
       */
      public java.util.List<? extends ForecastOrBuilder>
           getForecastOrBuilderList() {
        if (forecastBuilder_ != null) {
          return forecastBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(forecast_);
        }
      }
      /**
       * <code>repeated .Forecast forecast = 3;</code>
       */
      public Forecast.Builder addForecastBuilder() {
        return getForecastFieldBuilder().addBuilder(
            Forecast.getDefaultInstance());
      }
      /**
       * <code>repeated .Forecast forecast = 3;</code>
       */
      public Forecast.Builder addForecastBuilder(
          int index) {
        return getForecastFieldBuilder().addBuilder(
            index, Forecast.getDefaultInstance());
      }
      /**
       * <code>repeated .Forecast forecast = 3;</code>
       */
      public java.util.List<Forecast.Builder>
           getForecastBuilderList() {
        return getForecastFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          Forecast, Forecast.Builder, ForecastOrBuilder>
          getForecastFieldBuilder() {
        if (forecastBuilder_ == null) {
          forecastBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              Forecast, Forecast.Builder, ForecastOrBuilder>(
                  forecast_,
                  ((bitField0_ & 0x00000004) == 0x00000004),
                  getParentForChildren(),
                  isClean());
          forecast_ = null;
        }
        return forecastBuilder_;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:Weather)
    }

    // @@protoc_insertion_point(class_scope:Weather)
    private static final Weather DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new Weather();
    }

    public static Weather getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Weather>
        PARSER = new com.google.protobuf.AbstractParser<Weather>() {
      public Weather parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new Weather(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<Weather> parser() {
      return PARSER;
    }

    @Override
    public com.google.protobuf.Parser<Weather> getParserForType() {
      return PARSER;
    }

    public Weather getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_Wind_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_Wind_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_Atmosphere_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_Atmosphere_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_Forecast_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_Forecast_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_Weather_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_Weather_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    String[] descriptorData = {
      "\n\rweather.proto\"7\n\004Wind\022\r\n\005chill\030\001 \001(\005\022\021" +
      "\n\tdirection\030\002 \001(\005\022\r\n\005speed\030\003 \001(\005\"T\n\nAtmo" +
      "sphere\022\020\n\010humidity\030\001 \001(\005\022\020\n\010pressure\030\002 \001" +
      "(\001\022\016\n\006rising\030\003 \001(\005\022\022\n\nvisibility\030\004 \001(\001\"N" +
      "\n\010Forecast\022\014\n\004date\030\001 \001(\t\022\013\n\003day\030\002 \001(\t\022\014\n" +
      "\004high\030\003 \001(\005\022\013\n\003low\030\004 \001(\005\022\014\n\004text\030\005 \001(\t\"\\" +
      "\n\007Weather\022\023\n\004wind\030\001 \001(\0132\005.Wind\022\037\n\natmosp" +
      "here\030\002 \001(\0132\013.Atmosphere\022\033\n\010forecast\030\003 \003(" +
      "\0132\t.Forecastb\006proto3"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
    internal_static_Wind_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_Wind_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_Wind_descriptor,
        new String[] { "Chill", "Direction", "Speed", });
    internal_static_Atmosphere_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_Atmosphere_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_Atmosphere_descriptor,
        new String[] { "Humidity", "Pressure", "Rising", "Visibility", });
    internal_static_Forecast_descriptor =
      getDescriptor().getMessageTypes().get(2);
    internal_static_Forecast_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_Forecast_descriptor,
        new String[] { "Date", "Day", "High", "Low", "Text", });
    internal_static_Weather_descriptor =
      getDescriptor().getMessageTypes().get(3);
    internal_static_Weather_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_Weather_descriptor,
        new String[] { "Wind", "Atmosphere", "Forecast", });
  }

  // @@protoc_insertion_point(outer_class_scope)
}
